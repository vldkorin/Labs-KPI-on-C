#include <stdio.h>
#include <time.h>
#include <stdlib.h>

#define N 100

void vvid_mas(int size, int* a);      // введення масиву вручну
void vvid_rand_mas(int size, int* a); // заповнення випадковими числами
void vyvid(int size, int* a);         // виведення початкового масиву
int maxel(int size, int* a);          // пошук макс. елементу в масиві 
void obrobka(int size, int* a);       // обробка масиву відповідно до умови


int main() {
	system("chcp 1251 & cls");
	srand(time(0));
	int a[N],   // масив
		nmax,   // індекс максимального елементу
		size,   // розмір масиву
		meth,   // метод заповнення
		i,      // для ітерування по масиву
		ind;    // індикатор
	char vidp;  // змінна для відповіді про продовження роботи

	do {
		ind = 1;
		do { // введення кількості елементів масиву
			printf("Введіть кількість елементів масиву(size):");
			scanf_s("%d", &size);
			fseek(stdin, 0, SEEK_END);
			if (size <= 0 || size > N)
				printf(" Некоректне значення (size)!\n");
			else
				ind = 0;
		} while (ind);

		ind = 1;
		do { // вибір способу заповнення масиву
			printf("Оберіть спосіб заповнення масиву:\n");
			printf("1 - вручну , 0 - випадковo\n--> ");
			scanf_s("%d", &meth);
			fseek(stdin, 0, SEEK_END);
			if (meth == 1 || meth == 0)
				ind = 0;
			else printf("Некоректні данi!\n\n");
		} while (ind);

		if (meth)
			vvid_mas(size, a);
		else
			vvid_rand_mas(size, a);

		vyvid(size, a);

		nmax = maxel(size, a);
		printf("\nМаксимальний елемент a[%d]=%d\n", nmax, a[nmax]);

		if ((nmax % 2) && (a[nmax] % 2)) {
			obrobka(size, a);
			vyvid(size, a);
		}
		else {
			printf("\nОбробка не можлива: \nномер та значення максимального елемента має бути непарним");
		}

		printf("\n\nПродовжувати роботу (Y - так)? ");
		while ((vidp = getchar()) == ' ' || vidp == '\n' || vidp == '\t');
		fseek(stdin, 0, SEEK_END);
	} while (vidp == 'Y' || vidp == 'y' || vidp == 'Т' || vidp == 'т');
	printf("\n\n");
	system("pause");
	return 0;
}



void vvid_mas(int size, int* a) { // Заповнення масиву вручну 
	int i;
	printf("Введіть масив:\n");
	for (i = 0; i < size; i++)
		scanf_s("%d", &a[i]);
	fseek(stdin, 0, SEEK_END);
}


void vvid_rand_mas(int size, int* a) { // Заповнення масиву випадковими числами 
	int i;
	for (i = 0; i < size; i++)
		a[i] = rand() % 50;
}


void vyvid(int size, int* a) {// Виведення початкового масиву 
	int i;
	printf("\n[");
	for (i = 0; i < size; i++)
		printf("%d ", a[i]);
	printf("]\n");
}


int maxel(int size, int* a) { // Знаходження максимального елементу 
	int nmax, // номер макс. елемента
		i, // поточний елемeнент
	    amax;
	    amax = a[0];//  для знаходження макс. елемент.
		nmax = 0;
		for (i = 1; i < size; i++)
			if (amax < a[i]) {
				amax = a[i];
				nmax = i;
			}
	return nmax;
}


void obrobka(int size, int* a) { // елементи з парними значеннями зібрати в кінці масиву, зберігши їхній порядок; решту елементів 
	                            // розмістити на початку масиву, замінивши нулями
	int i;                       
	size = N;
	for (i = N - 1; i >= 0; i--)
		if (a[i] % 2 == 0) { // збирання парних елементів в кінці масиву
			size--; a[size] = a[i];
		}
	for (i = 0; i < size; i++) //запис нулів на початку масиву 
		a[i] = 0;
}
