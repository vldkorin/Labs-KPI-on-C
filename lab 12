#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define N 10

void vvid(int a[N][N], int n);            //введення елементів масиву вручну
void rand_mas(int a[N][N], int n);      //заповнення масиву випадковими числами
int maxnegative(int a[N][N], int n);   //обчислення максимального від'ємного числа в секторі 6
void obrobka3(int a[N][N], int n, int* k);   //заповнення 3 сектора нулями
void vyvid1(int a[N][N], int n);         //виведення початкового масив із сектором
void vyvid2(int a[N][N], int n);      //виведення обробленого масиву

int main() {
    int a[N][N],   //масив
        n,         //розмір матриці
        m,        //спосіб заповнення
        k,       //кількість елементів 3 сектора 
        ind;     //індикатор вводу
    char vidp;  // відповідь на продовження роботи програми
    system("chcp 1251 & cls"); 
    srand(time(0)); 
    
    do {
        ind = 1;
        do {
            printf("Введіть розмір матриці(1-10)\n-> ");
            scanf_s("%d", &n);
            fseek(stdin, 0, SEEK_END);//очистка буфера
            if (n > 1 && n <= N) ind = 0;
            else
                if (n <= 0 || n > N) {
                    printf("Невірне значення розміру матриці! Спробуйте ще раз\n");
                }
        } while (ind);
        do {
            printf("Виберіть спосіб заповнення масиву\n0 - вручну, 1 - випадковими числами\n-> ");
            scanf_s("%d", &m);
            fseek(stdin, 0, SEEK_END); // очистка буфера
            if (m == 0) {
                vvid(a, n); ind = 0; 
            }
            else if (m == 1) {
                rand_mas(a, n); ind = 0; 
            }
            else printf("Невірне значення\n");
        } while (ind);
        // вивід початкового масиву з сектором
        printf("Ваш масив:\n");
        vyvid1(a, n);

        //обчислення максимального від'ємного числа в секторі 6
        printf("\nНайбільше від'ємне число у 6 секторі = %d\n", maxnegative(a, n));
        obrobka3(a, n, &k);

        // обчислення і виведення кількості елементів 3 сектора
        printf("Кількість елементів в 3 секторі: %d\n", k);
        // вивід обробленого масиву
        printf("Оброблений масив:\n");
        vyvid2(a, n);
        fseek(stdin, 0, SEEK_END); // очистка буфера;
        printf("\nПродовжувати роботу (Y - так)? ");
        while ((vidp = getchar()) == ' ' || vidp == '\n' || vidp == '\t'); // пропуск пробільних символів і одержання відповіді
        fseek(stdin, 0, SEEK_END); // щоб у буфері не залишилося зайвої інформації
    } while (vidp == 'Y' || vidp == 'y' || vidp == 'Т' || vidp == 'т'); // з українськими буквами Т чи т
    // працює, якщо є system("chcp 1251") і char ans описано без unsigned 
    printf("\n\n"); return 0;
}
// введення елементів масиву
void vvid(int a[N][N], int n) {
    int i, j; //змінні для роботи циклів
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            printf("a[%d][%d] = ", i, j);
            scanf_s("%d", &a[i][j]);
            while (getchar() != '\n'); // очистка буфера
        }
    }
}
// заповнення масиву випадковими числами
void rand_mas(int a[N][N], int n) {
    int i, j; //змінні для роботи циклів
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            a[i][j] = rand() % 101 - 50; // числа від -50 до 50
        }
    }
}
// виведення масиву із сектором
void vyvid1(int a[N][N], int n) {
    int i, j; //змінні для роботи циклів
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            if (i + j > n - 1)
                printf("*%3d*\t", a[i][j]);
            else printf("%3d\t", a[i][j]);
        }
        printf("\n\n");
    }
}
//обчислення максимального від'ємного числа в секторі 6
int maxnegative(int a[N][N], int n) {
    int i, j, maxNeg;
    maxNeg = INT_MIN; 
    for (i = 1; i < n; i++) {
        for (j = n - i; j < n; j++) {
            if (a[i][j]<0 && a[i][j]> maxNeg) {
                maxNeg = a[i][j];
            }
        }
    }
    return maxNeg;
}
// обчислення кількості елементів 3 сектора
void obrobka3(int a[N][N], int n, int* k) {
    int i, j, jr; //змінні для роботи циклів
    *k = 0;
    for (i = 0; i < n; ++i) {
        if (i < (n + 1) / 2) jr = n - i - 1;
        else jr = i;
        for (j = jr; j < n; ++j) {
            a[i][j] = 0;
            (*k)++;
        }
    }
}
// виведення обробленого масиву
void vyvid2(int a[N][N], int n) {
    int i, j; //змінні для роботи циклів
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
                printf("  %3d\t", a[i][j]);
        }
        printf("\n\n");
    }
}
